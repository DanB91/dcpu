; size_t strcspn ( const char * str1, const char * str2 );
;
; Scans str1 for the first occurrence of any of the characters that
; are part of str2, returning the number of characters of str1 read
; before this first occurrence.
;
; The search includes the terminating null-characters, so the function
; will return the length of str1 if none of the characters of str2
; are found in str1.
;
; Returns the length of the initial part of str1 not containing any
; of the characters that are part of str2. This is the length of str1
; if none of the characters in str2 are found in str1.
;
; ## Dependencies
;   strchr.dasm
;   strlen.dasm
;
; ## Version History:
;   0.1.2: Fix checking of characters in str2.
;          We want to check not just for the first occurance it finds as
;          this may well lie beyond the index of another occuring token
;          later on in str2.
;
;          Given s1="abcd" and s2="ba", The routine should not exit when
;          it finds 'b' at position 1. Because 'a' also occurs and it's
;          positioned lower than 'b'.
;   0.1.1: Simplify exit code. No need to juggle values between a/b.
;   0.1.0: Initial implementation for spec 1.7.
;
:strcspn
  set push, a
  set j, b

  ; Get length of a
  jsr strlen
  set x, a

:strcspn_loop
  set a, peek
  sti b, [j]
  jsr strchr

  ife b, 0
    set pc, strcspn_ret

  ifl a, x
    set x, a

  set pc, strcspn_loop

:strcspn_ret
  set a, x
  sub a, pop
  set pc, pop
