// This file is subject to a 1-clause BSD license.
// Its contents can be found in the enclosed LICENSE file.

package lem1802

import "github.com/jteeuwen/dcpu/cpu"

// defaultFont defines the default character set for the LEM1802 monitor.
// 128 characters at 2 words/character. Each word splits into two rows
// of eight bits. Giving a 4x8 grid for each character.
//
// For example, the character 'F' is encoded as follows:
//
//     word 1 = 0xfe12 = 1111111000010010
//     word 2 = 0x0200 = 0000001000000000
//
// When split into octets:
//
//     word 1 = 11111110 (0xfe)
//              00010010 (0x12)
//     word 2 = 00000010 (0x02)
//              00000000 (0x00)
//
var DefaultFont = []cpu.Word{
	0x48a8, 0xf000, // a
	0xff84, 0x7000, // b
	0x7088, 0x5000, // c
	0x7088, 0xff00, // d
	0x70a8, 0xb000, // e
	0x10fc, 0x1200, // f
	0x90a8, 0x7800, // g
	0xff04, 0xf800, // h
	0x04fd, 0x0000, // i
	0x4080, 0x7d00, // j
	0xff20, 0xd800, // k
	0x01ff, 0x0000, // l
	0xf830, 0xf800, // m
	0xf808, 0xf000, // n
	0x6090, 0x6000, // o
	0xf828, 0x1000, // p
	0x1028, 0xf800, // q
	0xf808, 0x1000, // r
	0x90a8, 0x4800, // s
	0x087c, 0x8800, // t
	0x7880, 0xf800, // u
	0x38c0, 0x3800, // v
	0xf860, 0xf800, // w
	0xd820, 0xd800, // x
	0x98a0, 0x7800, // y
	0xc8a8, 0x9800, // z

	0xfc12, 0xfc00, // A
	0xfe92, 0x6c00, // B
	0x7c82, 0x4400, // C
	0xfe82, 0x7c00, // D
	0xfe92, 0x8200, // E
	0xfe12, 0x0200, // F
	0x7c82, 0xf400, // G
	0xfe10, 0xfe00, // H
	0x82fe, 0x8200, // I
	0x4080, 0x7e00, // J
	0xfe10, 0xee00, // K
	0xfe80, 0x8000, // L
	0xfe0c, 0xfe00, // M
	0xfe02, 0xfc00, // N
	0x7c82, 0x7c00, // O
	0xfe12, 0x0c00, // P
	0x7c82, 0xfc00, // Q
	0xfe12, 0xec00, // R
	0x4c92, 0x6400, // S
	0x02fe, 0x0200, // T
	0x7e80, 0xfe00, // U
	0x3ec0, 0x3e00, // V
	0xfe60, 0xfe00, // W
	0xee10, 0xee00, // X
	0x0ef0, 0x0e00, // Y
	0xe292, 0x8e00, // Z

	0x7c92, 0x7c00, // 0
	0x84fe, 0x8000, // 1
	0xc4b2, 0xbc00, // 2
	0x4492, 0x6c00, // 3
	0x1e10, 0xfe00, // 4
	0x4e8a, 0x7200, // 5
	0x7c92, 0x6400, // 6
	0xc232, 0x0e00, // 7
	0x6c92, 0x6c00, // 8
	0x4c92, 0x7c00, // 9

	0x0002, 0x0400, // `
	0x0402, 0x0402, // ~
	0x00be, 0x0000, // !
	0x7cb2, 0xbc00, // @
	0x7c28, 0x7c00, // #
	0x4cd6, 0x6400, // $
	0xc238, 0x8600, // %
	0x0402, 0x0400, // ^
	0x6c92, 0x6ca0, // &
	0x2810, 0x2800, // *
	0x3844, 0x8200, // (
	0x8244, 0x3800, // )
	0x8080, 0x8000, // _
	0x1010, 0x1000, // -
	0x1038, 0x1000, // +
	0x2828, 0x2800, // =
	0x106c, 0x8200, // {
	0x826c, 0x1000, // }
	0xfe82, 0x0000, // [
	0x82fe, 0x0000, // ]
	0x00ee, 0x0000, // |
	0x0638, 0xc000, // \
	0xc038, 0x0600, // /
	0x0048, 0x0000, // :
	0x8048, 0x0000, // ;
	0x0600, 0x0600, // "
	0x0402, 0x0000, // '
	0x1028, 0x4400, // <
	0x4428, 0x1000, // >
	0x8040, 0x0000, // ,
	0x0080, 0x0000, // .
	0x04b2, 0x0c00, // ?
}
